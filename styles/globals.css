@import "tailwindcss";

:root {
  --foreground-rgb: 0, 0, 0;
  --background-rgb: 255, 255, 255;
}

@media (prefers-color-scheme: dark) {
  :root {
    --foreground-rgb: 255, 255, 255;
    --background-rgb: 0, 0, 0;
  }
}

body {
  color: rgb(var(--foreground-rgb));
  background: rgb(var(--background-rgb));
}

h1 {
  @apply text-3xl text-gray-800 dark:text-gray-200 font-bold text-center;
}

h3 {
  @apply text-xl text-gray-800 dark:text-gray-200 font-bold text-center;
}

input {
  @apply text-black;
}

#grid-container {
  display: grid;
  grid-template-areas:
    "away away away away"
    "home main spacer spacer";
  grid-template-columns: 100px 1fr 100px;
  grid-template-rows: auto 1fr;
  gap: 0;
  max-width: 100vw;
  height: 100%;
  overflow-x: hidden;
  @media (max-width: 768px) {
    grid-template-areas:
      "away"
      "main";
    grid-template-columns: 1fr;
  }
}

#spacer {
  grid-area: spacer;
  @media (max-width: 768px) {
    display: none;
  }
}

#home-logo {
  grid-area: home;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100px;
  align-self: center;
  margin-top: 2.5rem;
  @media (max-width: 768px) {
    display: none;
  }
}

#away-logo {
  grid-area: away;
  display: flex;
  justify-content: center;
  width: 100%;
  grid-column: 1 / -1; /* Span all columns */
}

#grid-content {
  grid-area: main;
  width: 100%;
  min-height: 800px;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
  position: relative;
}

/* Hide scrollbar for Chrome, Safari and Opera */
#grid-content::-webkit-scrollbar {
  display: none;
}

/* Hide scrollbar for IE, Edge and Firefox */
#grid-content {
  -ms-overflow-style: none;  /* IE and Edge */
  scrollbar-width: none;  /* Firefox */
}

/* Custom classes */
@layer components {
  .container {
    @apply mx-auto px-4;
  }
  
  .btn-primary {
    @apply bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600 transition-colors;
  }
  
  .grid-square {
    @apply aspect-square flex items-center justify-center text-sm;
  }
  
  .grid-square.pending {
    @apply bg-yellow-200 text-black;
  }
  
  .grid-square.approved {
    @apply bg-gray-400;
  }
  
  .grid-square.available {
    @apply bg-white text-black hover:bg-gray-100 cursor-pointer;
  }
}

.grid-square {
  @apply aspect-square flex items-center justify-center text-sm;
}

.grid-square.pending {
  @apply bg-yellow-200;
}

.grid-square.approved {
  @apply bg-gray-400;
}

.grid-square.available {
  @apply bg-white hover:bg-gray-100 cursor-pointer;
}

/* Container for the actual grid to allow proper scrolling */
.grid-scroll-container {
  width: 100%;
  overflow-x: auto;
}

.grid-inner-content {
  min-width: fit-content;
  position: relative;
  /* Add prominent inner shadow */
  box-shadow: 
    inset 20px 0 15px -15px rgba(0, 0, 0, 0.3),
    inset -20px 0 15px -15px rgba(0, 0, 0, 0.3);
}

.grid-areas-layout {
  grid-template-areas:
    ". top"
    "left main";
  grid-template-columns: auto 1fr;
  grid-template-rows: auto 1fr;
}

.grid-label-left {
  margin-bottom: 1rem;
}

.grid-area-top {
  grid-area: top;
}

.grid-area-left {
  grid-area: left;
  position: sticky;
  left: 0;
  /* Lower z-index than modals (which use z-50) */
  z-index: 20;
  border-right: 1px solid black;
  margin-left: -1px;
  /* Add shadow to right edge of sticky labels */
  background-color: rgb(249, 250, 251); /* bg-gray-50 */
  box-shadow: 4px 0 8px -2px rgba(0, 0, 0, 0.2);
}

.grid-area-main {
  grid-area: main;
  display: grid;
  grid-template-columns: repeat(10, 8rem);  /* Desktop size */
  width: fit-content;
  
  /* Mobile grid sizing */
  @media (max-width: 768px) {
    grid-template-columns: repeat(10, 4rem);
  }
}

/* Remove double borders between cells */
.grid-area-main > div,
.grid-area-left > div {
  border-right: none;
  border-bottom: none;
}

/* Add right border to last column */
.grid-area-main > div:nth-child(10n) {
  border-right: 1px solid black;
}

/* Add bottom border to last row */
.grid-area-main > div:nth-child(n+91) {
  border-bottom: 1px solid black;
}

.square-height {
  height: var(--row-height, 6rem);
  min-height: var(--row-height, 6rem);
  max-height: var(--row-height, 6rem);
}

/* Adjust left label width */
.grid-area-left > div {
  width: 2rem;
}

@keyframes spin {
  from { transform: rotate(0deg); }
  to { transform: rotate(360deg); }
}

.animate-spin {
  animation: spin 1s linear infinite;
}

/* Add this to your existing CSS */
button:disabled {
  opacity: 0.7;
  cursor: not-allowed;
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

@keyframes slideIn {
  from { transform: translateY(-20px); }
  to { transform: translateY(0); }
}

.animate-fade-in {
  animation: fadeIn 0.3s ease-out;
}

.animate-slide-in {
  animation: slideIn 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}
